cmake_minimum_required(VERSION 2.8)
project(RRR)

#Enable support for C++11
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")

#设定二进制文件路径
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)


#设定库文件编译路径
SET(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
#设定.cmake文件存放路径
#SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "{CMAKE_CURRENT_SOURCE_DIR}/cmake_modules")
LIST(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)

# find g2o lib
find_package(G2O REQUIRED)
IF(G2O_FOUND)
    include_directories(${G2O_INCLUDE_DIR})
    message("G2O lib is found:" ${G2O_INCLUDE_DIR})
ENDIF(G2O_FOUND)

find_package(Eigen3 REQUIRED)
find_package(CSparse REQUIRED)
find_package(Cholmod REQUIRED)
IF(CHOLMOD_FOUND)
    include_directories(${CHOLMOD_INCLUDE_DIR})
    message("G2O lib is found:" ${CHOLMOD_INCLUDE_DIR})
ENDIF(CHOLMOD_FOUND)

message("SUITESPARSE_INCLUDE_DIR:" ${SUITESPARSE_INCLUDE_DIR})

include_directories(${CSPARSE_INCLUDE_DIR})
include_directories(${EIGEN3_INCLUDE_DIR})


include_directories(${CMAKE_SOURCE_DIR} ${SUITESPARSE_INCLUDE_DIR})
SET(G2O_LIBS g2o_cli g2o_ext_freeglut_minimal g2o_simulator g2o_solver_slam2d_linear g2o_types_icp g2o_types_slam2d g2o_core g2o_interface g2o_solver_csparse g2o_solver_structure_only g2o_types_sba g2o_types_slam3d g2o_csparse_extension g2o_opengl_helper g2o_solver_dense g2o_stuff g2o_types_sclam2d g2o_parser g2o_solver_pcg g2o_types_data g2o_types_sim3 cxsparse g2o_solver_cholmod cholmod)

add_subdirectory(examples)

#ADD_EXECUTABLE(g2o_test simple_optimize.cpp 3D_from_disk_g2o.cpp)
#target_link_libraries(g2o_test ${G2O_LIBS})

#set(PROGRAMS simple_optimize 3D_from_disk_g2o)

#foreach(program ${PROGRAMS})
#  add_executable(${PROJECT_NAME}_${program} ${program}.cpp)
#  target_link_libraries(${PROJECT_NAME}_${program} ${SUITESPARSE_LIBRARIES} ${G2O_LIBRARIES} ${G2O_LIBS})
#endforeach(program)



#从example下过来的
#include_directories(${CMAKE_SOURCE_DIR} ${EIGEN3_INCLUDE_DIR} ${SUITESPARSE_INCLUDE_DIR} ${G2O_INCLUDE_DIR} ${CSPARSE_INCLUDE_DIR})

#set(PROGRAMS 2D_optimizer_g2o 3D_from_disk_g2o)

#foreach(program ${PROGRAMS})
#  add_executable(${PROJECT_NAME}_${program} ${program}.cpp)
#  target_link_libraries(${PROJECT_NAME}_${program} ${SUITESPARSE_LIBRARIES} ${G2O_LIBRARIES} ${G2O_LIBS})
#endforeach(program)

#从rrr顶层过来的
#cmake_minimum_required(VERSION 2.6)
#project(RRR)

#set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake_modules/")

#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -fPIC -ggdb")


#find_package(G2O)
#find_package(Eigen3)
#find_package(SuiteSparse)
#find_package(CSparse REQUIRED)

#SET(G2O_LIBS g2o_cli g2o_ext_freeglut_minimal g2o_simulator g2o_solver_slam2d_linear g2o_types_icp g2o_types_slam2d g2o_core g2o_interface g2o_solver_csparse g2o_solver_structure_only g2o_types_sba g2o_types_slam3d g2o_csparse_extension g2o_opengl_helper g2o_solver_dense g2o_stuff g2o_types_sclam2d g2o_parser g2o_solver_pcg g2o_types_data g2o_types_sim3 cxsparse )

#SET(CMAKE_BUILD_TYPE RelWithDebInfo)
#if("${CMAKE_BUILD_TYPE}" STREQUAL "")
#  set(CMAKE_BUILD_TYPE Release)
#endif()

#add_subdirectory(examples)


